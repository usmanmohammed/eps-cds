@model EPS.Models.CorpMember

@{
    ViewBag.Title = "EditCorpMember";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="col-sm-9 col-md-10 admin-main">
    <div class="col-md-7 padd-top">
        @using (Html.BeginForm("EditCorpMember", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal well well-lg well-border">
                <h4>Edit Corp Member</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BatchId, "Batch", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.DropDownList("BatchId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsExco, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsExco)
                            @Html.ValidationMessageFor(model => model.IsExco, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CorpMemberRoleId, "Position", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.DropDownList("CorpMemberRoleId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CorpMemberRoleId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Image Upload", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-offset-3 col-md-8">
                        <ul class="list-inline list-unstyled">
                            <li class="li-post-image">
                                <a id="fancy-load" class="fancy-image" rel="group" href="data:@Model.ThumbnailContentType;base64,@System.Convert.ToBase64String(Model.Thumbnail)" data-rel="fancybox-button">
                                    <img class="post-image-sm" src="data:@Model.ThumbnailContentType;base64,@System.Convert.ToBase64String(Model.Thumbnail)" alt="username">
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-md-offset-3 col-md-8">
                        <input class="form-control" id="Thumbnail" multiple accept=".png, .jpg, .jpeg" name="image" title="Upload an Image" type="file" />
                        @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-8">
                        <input type="submit" value="Save" class="btn btn-link btn-submit" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
